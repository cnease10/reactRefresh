{"ast":null,"code":"var _jsxFileName = \"/Users/cierranease/reactRefresh/src/Map/index.js\";\n//import { render } from '@testing-library/react';\n//import { render } from '@testing-library/react';\nimport React from 'react';\n\nclass Map extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      grocery: [\"milk\", \"water\", \"food\"],\n      funStuff: [[\"code\", \"code\", \"code\"], [\"friends\", \"family\", \"brett\"], [\"reading\", \"puzzles\", \"outside\"]]\n    };\n  } // newFunction() {\n  // let funStuffItems = [this.state.funStuffItems]\n  // let commas = funStuffItems.join(', ')\n  // let newArray = commas.split(', ')\n  // this.setState(state => ({\n  //     funStuff: newArray\n  // }))\n  // }\n\n\n  newFunction() {\n    let items = []; // for (let i= 0; i < this.state.funStuff.length; i++) {\n    //     //console.log(this.state.funStuff[i])\n    //     // get back the three arrays\n    //     for (let x =0; x < this.state.funStuff[i].length; x++) {\n    //     //console.log(this.state.funStuff[i][x])\n    //     //get back individual items from arrays\n    //     items = this.state.funStuff[i][x]\n    //     items.split(', ')\n    //     console.log(items)\n    //     //add individual items to an array\n    //     }\n    // }\n    //was just looping through the array without ever joining the array items\n\n    items = this.state.funStuff.join(',').split(',');\n    console.log(items); //items is now an array of all the items \n\n    this.setState({\n      funStuff: [items]\n    });\n    console.log(this.state.funStuff);\n  }\n\n  componentDidMount() {\n    this.newFunction();\n  }\n\n  render() {\n    // function callFunction() {\n    //     this.newFunction()\n    // }\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }\n    });\n  }\n\n}\n\nexport default Map; //notes\n//let splitItems = funStuffItems\n// const [grocery, setstate] = useState([\"Milk\", \"bread\", \"water\"]);\n// for (let i= 0; i < this.state.funStuff.length; i++) {\n//console.log(this.state.funStuff[i])\n//  for (let x =0; x < this.state.funStuff[i].length; x++) {\n//console.log(this.state.funStuff[i][x])\n// for (let z=0; z < this.state.funStuff[i][x].length; z++) {\n//     console.log(this.state.funStuff[i][x][z])\n//     //console.log(z)\n// }\n// this far in loops through all the letters and gives them an index\n// so array of arrays - 3 for loops == index and letters of items in arrays\n// items = this.state.funStuff[i][x]\n// console.log(items)\n// return items\n// }\n//console.log(items)\n//  this.setState(state => ({\n//      funStuff: \n//  }))   \n//funStuffItems = [this.state.funStuffItems]\n//console.log(funStuffItems) == undefined\n//but mapping over funStuffItems ==\n//codecodecode\n//friendsfamilybrett\n//readingpuzzlesoutside\n// for (let i= 0; i < this.state.funStuff.length; i++) {\n// funStuffItems = this.state.funStuff[i]\n// return funStuffItems\n// let funStuffInner = this.state.funStuff[i]\n// console.log(funStuffInner)\n// for (let x =0; x < funStuffInner.length; x++) {\n//     console.log(funStuffInner[x])\n//     funStuffItems = funStuffInner[x]\n//     return funStuffItems\n// //only looping through first array of items so getting code  \n// }\n// this.setState(state => ({\n//     funStuff: funStuffItems\n// }))\n// this.setState(state => ({\n//     funStuff: funStuffItems\n// }))","map":{"version":3,"sources":["/Users/cierranease/reactRefresh/src/Map/index.js"],"names":["React","Map","Component","constructor","state","grocery","funStuff","newFunction","items","join","split","console","log","setState","componentDidMount","render"],"mappings":";AAAA;AACA;AACA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,GAAN,SAAkBD,KAAK,CAACE,SAAxB,CAAkC;AAC9BC,EAAAA,WAAW,GAAG;AACV;AACA,SAAKC,KAAL,GAAa;AACZC,MAAAA,OAAO,EAAG,CAAC,MAAD,EAAS,OAAT,EAAkB,MAAlB,CADE;AAEZC,MAAAA,QAAQ,EAAE,CAAC,CAAC,MAAD,EAAS,MAAT,EAAiB,MAAjB,CAAD,EAA2B,CAAC,SAAD,EAAY,QAAZ,EAAsB,OAAtB,CAA3B,EAA2D,CAAC,SAAD,EAAY,SAAZ,EAAuB,SAAvB,CAA3D;AAFE,KAAb;AAKH,GAR6B,CAS9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACAC,EAAAA,WAAW,GAAG;AACV,QAAIC,KAAK,GAAG,EAAZ,CADU,CAGV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEAA,IAAAA,KAAK,GAAG,KAAKJ,KAAL,CAAWE,QAAX,CAAoBG,IAApB,CAAyB,GAAzB,EAA8BC,KAA9B,CAAoC,GAApC,CAAR;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYJ,KAAZ,EAlBU,CAmBV;;AAEA,SAAKK,QAAL,CAAc;AAACP,MAAAA,QAAQ,EAAE,CAACE,KAAD;AAAX,KAAd;AACAG,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKR,KAAL,CAAWE,QAAvB;AACH;;AACDQ,EAAAA,iBAAiB,GAAG;AAChB,SAAKP,WAAL;AACH;;AAEDQ,EAAAA,MAAM,GAAG;AAEL;AACA;AAEA;AAGA,wBACI,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ;AAeH;;AApE6B;;AA0ElC,eAAed,GAAf,C,CAGA;AACC;AACO;AACD;AACK;AACF;AAEE;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACD;AAEH;AACA;AACA;AACA;AACI;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEL;AACC;AACA;AACA;AACA;AACA;AACA","sourcesContent":["//import { render } from '@testing-library/react';\n//import { render } from '@testing-library/react';\nimport React from 'react';\n\nclass Map extends React.Component {\n    constructor() {\n        super();\n        this.state = {\n         grocery : [\"milk\", \"water\", \"food\"],\n         funStuff: [[\"code\", \"code\", \"code\"], [\"friends\", \"family\", \"brett\"], [\"reading\", \"puzzles\", \"outside\"]]\n        }\n    \n    }\n    // newFunction() {\n    // let funStuffItems = [this.state.funStuffItems]\n    // let commas = funStuffItems.join(', ')\n    // let newArray = commas.split(', ')\n    // this.setState(state => ({\n    //     funStuff: newArray\n    // }))\n    // }\n    newFunction() {\n        let items = []\n        \n        // for (let i= 0; i < this.state.funStuff.length; i++) {\n        //     //console.log(this.state.funStuff[i])\n        //     // get back the three arrays\n        //     for (let x =0; x < this.state.funStuff[i].length; x++) {\n        //     //console.log(this.state.funStuff[i][x])\n        //     //get back individual items from arrays\n        //     items = this.state.funStuff[i][x]\n        //     items.split(', ')\n        //     console.log(items)\n        //     //add individual items to an array\n        //     }\n        // }\n        //was just looping through the array without ever joining the array items\n\n        items = this.state.funStuff.join(',').split(',')\n        console.log(items)\n        //items is now an array of all the items \n\n        this.setState({funStuff: [items]})\n        console.log(this.state.funStuff)\n    }\n    componentDidMount() {\n        this.newFunction()\n    }\n    \n    render() {\n       \n        // function callFunction() {\n        //     this.newFunction()\n            \n        // }\n        \n        \n        return (\n            <React.Fragment>\n                {/* <ul>\n                    {this.state.grocery.map(item => (\n                        <li key={item}>{item}</li>\n                    ) )}\n                </ul> */}\n                 {/* <ul>\n                   {this.state.funStuff.map((fun, index) => (\n                       <li key={index}>{fun}</li>\n                   ))}\n                </ul>  */}\n            </React.Fragment>\n        )\n          \n    }\n      \n        \n    \n}\n\nexport default Map\n\n\n//notes\n //let splitItems = funStuffItems\n        // const [grocery, setstate] = useState([\"Milk\", \"bread\", \"water\"]);\n       // for (let i= 0; i < this.state.funStuff.length; i++) {\n            //console.log(this.state.funStuff[i])\n          //  for (let x =0; x < this.state.funStuff[i].length; x++) {\n            \n            //console.log(this.state.funStuff[i][x])\n            // for (let z=0; z < this.state.funStuff[i][x].length; z++) {\n            //     console.log(this.state.funStuff[i][x][z])\n            //     //console.log(z)\n            // }\n            // this far in loops through all the letters and gives them an index\n            // so array of arrays - 3 for loops == index and letters of items in arrays\n\n            // items = this.state.funStuff[i][x]\n            // console.log(items)\n            // return items\n           // }\n            \n        //console.log(items)\n        //  this.setState(state => ({\n        //      funStuff: \n        //  }))   \n            //funStuffItems = [this.state.funStuffItems]\n            //console.log(funStuffItems) == undefined\n            //but mapping over funStuffItems ==\n            //codecodecode\n            //friendsfamilybrett\n            //readingpuzzlesoutside\n            \n            // for (let i= 0; i < this.state.funStuff.length; i++) {\n            // funStuffItems = this.state.funStuff[i]\n            // return funStuffItems\n            // let funStuffInner = this.state.funStuff[i]\n            // console.log(funStuffInner)\n            // for (let x =0; x < funStuffInner.length; x++) {\n            //     console.log(funStuffInner[x])\n            //     funStuffItems = funStuffInner[x]\n            //     return funStuffItems\n            // //only looping through first array of items so getting code  \n            \n       // }\n        // this.setState(state => ({\n        //     funStuff: funStuffItems\n        // }))\n        // this.setState(state => ({\n        //     funStuff: funStuffItems\n        // }))"]},"metadata":{},"sourceType":"module"}