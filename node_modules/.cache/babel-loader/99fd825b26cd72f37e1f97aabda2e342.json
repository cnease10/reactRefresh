{"ast":null,"code":"var _jsxFileName = \"/Users/cierranease/reactRefresh/src/Map/index.js\";\n//import { render } from '@testing-library/react';\n//import { render } from '@testing-library/react';\nimport React from 'react';\n\nclass Map extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      grocery: [\"milk\", \"water\", \"food\"],\n      funStuff: [[\"code\", \"code\", \"code\"], [\"friends\", \"family\", \"brett\"], [\"reading\", \"puzzles\", \"outside\"]],\n      phoneNumbers: [{\n        name: 'annie',\n        phone: 404567181\n      }, {\n        name: 'orrin',\n        phone: 347810532\n      }, {\n        name: 'brett',\n        phone: 1231049353\n      }]\n    };\n  }\n\n  newFunction() {\n    let items = [];\n    items = this.state.funStuff.join(',').split(',');\n    console.log(items); //items is now an array of all the items \n\n    this.setState({\n      funStuff: items\n    });\n  } // getPhone() {\n  //     let names = []\n  //     let phone = []\n  //     for (let i = 0; i < this.state.phoneNumbers.length; i++) {\n  //         console.log(this.state.phoneNumbers[i])\n  //         names = names + \" \" + this.state.phoneNumbers[i].name \n  //         console.log(names)\n  //         phone = phone + \" \" + this.state.phoneNumbers[i].phone\n  //         console.log(phone)\n  //     }\n  //     return names && phone\n  //     //this.setState({names: names})\n  // }\n\n\n  componentDidMount() {\n    this.newFunction(); //this.getPhone()\n  }\n\n  render() {\n    let names = [];\n    let phone = [];\n    let namePhone = [];\n    let phoneNumbers = this.state.phoneNumbers;\n\n    function getPhone() {\n      for (let i = 0; i < phoneNumbers.length; i++) {\n        console.log(phoneNumbers[i]);\n        names = names + \" \" + phoneNumbers[i].name;\n        names = names.split();\n        console.log(names);\n        phone = phone + \" \" + phoneNumbers[i].phone;\n        phone = phone.split();\n        console.log(typeof phone);\n        namePhone = namePhone + \" \" + phoneNumbers[i].name + \":\" + phoneNumbers[i].phone;\n      }\n\n      return names && phone; //this.setState({names: names})\n    }\n\n    getPhone();\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 18\n      }\n    }, this.state.grocery.map(item => /*#__PURE__*/React.createElement(\"li\", {\n      key: item,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 25\n      }\n    }, item))), /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 18\n      }\n    }, this.state.funStuff.map((fun, index) => /*#__PURE__*/React.createElement(\"li\", {\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 24\n      }\n    }, fun))), /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }\n    }, names.map((name, index) => /*#__PURE__*/React.createElement(\"li\", {\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 25\n      }\n    }, name)), phone.map((phone, index) => /*#__PURE__*/React.createElement(\"li\", {\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 25\n      }\n    }, phone))), /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 20\n      }\n    }, JSON.stringify(this.state.phoneNumbers, null, 5))), /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }\n    }, namePhone.map((namePhone, index) => /*#__PURE__*/React.createElement(\"li\", {\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 25\n      }\n    }, namePhone))));\n  }\n\n}\n\nexport default Map; //notes\n// for (let i= 0; i < this.state.funStuff.length; i++) {\n//     //console.log(this.state.funStuff[i])\n//     // get back the three arrays\n//     for (let x =0; x < this.state.funStuff[i].length; x++) {\n//     //console.log(this.state.funStuff[i][x])\n//     //get back individual items from arrays\n//     items = this.state.funStuff[i][x]\n//     items.split(', ')\n//     console.log(items)\n//     //add individual items to an array\n//     }\n// }\n//was just looping through the array without ever joining the array items\n//let splitItems = funStuffItems\n// const [grocery, setstate] = useState([\"Milk\", \"bread\", \"water\"]);\n// for (let i= 0; i < this.state.funStuff.length; i++) {\n//console.log(this.state.funStuff[i])\n//  for (let x =0; x < this.state.funStuff[i].length; x++) {\n//console.log(this.state.funStuff[i][x])\n// for (let z=0; z < this.state.funStuff[i][x].length; z++) {\n//     console.log(this.state.funStuff[i][x][z])\n//     //console.log(z)\n// }\n// this far in loops through all the letters and gives them an index\n// so array of arrays - 3 for loops == index and letters of items in arrays\n// items = this.state.funStuff[i][x]\n// console.log(items)\n// return items\n// }\n//console.log(items)\n//  this.setState(state => ({\n//      funStuff: \n//  }))   \n//funStuffItems = [this.state.funStuffItems]\n//console.log(funStuffItems) == undefined\n//but mapping over funStuffItems ==\n//codecodecode\n//friendsfamilybrett\n//readingpuzzlesoutside\n// for (let i= 0; i < this.state.funStuff.length; i++) {\n// funStuffItems = this.state.funStuff[i]\n// return funStuffItems\n// let funStuffInner = this.state.funStuff[i]\n// console.log(funStuffInner)\n// for (let x =0; x < funStuffInner.length; x++) {\n//     console.log(funStuffInner[x])\n//     funStuffItems = funStuffInner[x]\n//     return funStuffItems\n// //only looping through first array of items so getting code  \n// }\n// this.setState(state => ({\n//     funStuff: funStuffItems\n// }))\n// this.setState(state => ({\n//     funStuff: funStuffItems\n// }))\n//     <ul>\n//     {this.state.phoneNumbers.map((phone, name) =>(\n//         <li key={name}>{phone}</li>\n//     ))}\n// </ul>\n//can't map an array of objects\n\n{\n  /* <ul>\n                   <li>{Object.entries(this.state.phoneNumbers)}</li>\n                   objects are not valid as react children\n               </ul> */\n}","map":{"version":3,"sources":["/Users/cierranease/reactRefresh/src/Map/index.js"],"names":["React","Map","Component","constructor","state","grocery","funStuff","phoneNumbers","name","phone","newFunction","items","join","split","console","log","setState","componentDidMount","render","names","namePhone","getPhone","i","length","map","item","fun","index","JSON","stringify"],"mappings":"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","sourcesContent":["//import { render } from '@testing-library/react';\n//import { render } from '@testing-library/react';\nimport React from 'react';\n\nclass Map extends React.Component {\n    constructor() {\n        super();\n        this.state = {\n         grocery : [\"milk\", \"water\", \"food\"],\n         funStuff: [[\"code\", \"code\", \"code\"], [\"friends\", \"family\", \"brett\"], [\"reading\", \"puzzles\", \"outside\"]],\n         phoneNumbers: [\n            {name: 'annie', phone: 404567181}, \n            {name: 'orrin', phone: 347810532}, \n            {name: 'brett', phone : 1231049353}\n         ],\n\n           \n            \n        }\n    \n    }\n    newFunction() {\n        let items = []\n        items = this.state.funStuff.join(',').split(',')\n        console.log(items)\n        //items is now an array of all the items \n\n        this.setState({funStuff: items})\n        \n    }\n    // getPhone() {\n    //     let names = []\n    //     let phone = []\n    //     for (let i = 0; i < this.state.phoneNumbers.length; i++) {\n    //         console.log(this.state.phoneNumbers[i])\n    //         names = names + \" \" + this.state.phoneNumbers[i].name \n    //         console.log(names)\n    //         phone = phone + \" \" + this.state.phoneNumbers[i].phone\n    //         console.log(phone)\n           \n    //     }\n    //     return names && phone\n    //     //this.setState({names: names})\n    // }\n    componentDidMount() {\n        this.newFunction()\n        //this.getPhone()\n        \n    }\n    \n    render() {\n        let names = []\n        let phone = []\n        let namePhone = []\n        let phoneNumbers = this.state.phoneNumbers\n        function getPhone() {\n        \n        for (let i = 0; i < phoneNumbers.length; i++) {\n            console.log(phoneNumbers[i])\n            names = names + \" \" + phoneNumbers[i].name\n            names = names.split()\n            console.log(names)\n            \n            phone = phone + \" \" + phoneNumbers[i].phone\n            phone = phone.split()\n            console.log(typeof(phone))\n            namePhone = namePhone + \" \" + phoneNumbers[i].name + \":\" + phoneNumbers[i].phone\n            \n        }\n        return names && phone\n        //this.setState({names: names})\n    }\n    getPhone()\n        \n        return (\n            <React.Fragment>\n                 <ul>\n                    {this.state.grocery.map(item => (\n                        <li key={item}>{item}</li>\n                    ) )}\n                </ul> \n                 <ul>\n                   {this.state.funStuff.map((fun, index) => (\n                       <li key={index}>{fun}</li>\n                   ))}\n                </ul>  \n                \n                <ul>\n                    {names.map((name, index) => (\n                        <li key={index}>{name}</li>\n                    ))}\n                    {phone.map((phone, index) => (\n                        <li key={index}>{phone}</li>\n                    ))}\n                </ul>\n                <ul>\n                   <li>{JSON.stringify(this.state.phoneNumbers, null, 5)}</li> \n                </ul>\n                <ul>\n                    {namePhone.map((namePhone, index) => (\n                        <li key={index}>{namePhone}</li>\n                    ))}\n                </ul>\n              \n            </React.Fragment>\n        )\n          \n    }\n      \n        \n    \n}\n\nexport default Map\n\n\n//notes\n\n// for (let i= 0; i < this.state.funStuff.length; i++) {\n        //     //console.log(this.state.funStuff[i])\n        //     // get back the three arrays\n        //     for (let x =0; x < this.state.funStuff[i].length; x++) {\n        //     //console.log(this.state.funStuff[i][x])\n        //     //get back individual items from arrays\n        //     items = this.state.funStuff[i][x]\n        //     items.split(', ')\n        //     console.log(items)\n        //     //add individual items to an array\n        //     }\n        // }\n        //was just looping through the array without ever joining the array items\n\n\n\n //let splitItems = funStuffItems\n        // const [grocery, setstate] = useState([\"Milk\", \"bread\", \"water\"]);\n       // for (let i= 0; i < this.state.funStuff.length; i++) {\n            //console.log(this.state.funStuff[i])\n          //  for (let x =0; x < this.state.funStuff[i].length; x++) {\n            \n            //console.log(this.state.funStuff[i][x])\n            // for (let z=0; z < this.state.funStuff[i][x].length; z++) {\n            //     console.log(this.state.funStuff[i][x][z])\n            //     //console.log(z)\n            // }\n            // this far in loops through all the letters and gives them an index\n            // so array of arrays - 3 for loops == index and letters of items in arrays\n\n            // items = this.state.funStuff[i][x]\n            // console.log(items)\n            // return items\n           // }\n            \n        //console.log(items)\n        //  this.setState(state => ({\n        //      funStuff: \n        //  }))   \n            //funStuffItems = [this.state.funStuffItems]\n            //console.log(funStuffItems) == undefined\n            //but mapping over funStuffItems ==\n            //codecodecode\n            //friendsfamilybrett\n            //readingpuzzlesoutside\n            \n            // for (let i= 0; i < this.state.funStuff.length; i++) {\n            // funStuffItems = this.state.funStuff[i]\n            // return funStuffItems\n            // let funStuffInner = this.state.funStuff[i]\n            // console.log(funStuffInner)\n            // for (let x =0; x < funStuffInner.length; x++) {\n            //     console.log(funStuffInner[x])\n            //     funStuffItems = funStuffInner[x]\n            //     return funStuffItems\n            // //only looping through first array of items so getting code  \n            \n       // }\n        // this.setState(state => ({\n        //     funStuff: funStuffItems\n        // }))\n        // this.setState(state => ({\n        //     funStuff: funStuffItems\n        // }))\n\n    //     <ul>\n    //     {this.state.phoneNumbers.map((phone, name) =>(\n    //         <li key={name}>{phone}</li>\n    //     ))}\n    // </ul>\n    //can't map an array of objects\n  {/* <ul>\n                    <li>{Object.entries(this.state.phoneNumbers)}</li>\n                    objects are not valid as react children\n                </ul> */}"]},"metadata":{},"sourceType":"module"}