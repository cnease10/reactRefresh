{"ast":null,"code":"var _jsxFileName = \"/Users/cierranease/reactRefresh/src/Map4/index.js\";\nimport React from 'react'; //create functional component \n// function Map4() {\n//     return(\n//         <React.Fragment>\n//             <p>hi</p>\n//         </React.Fragment>\n//     )\n// }\n//now change functional component to class component\n\nclass Map4 extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      array: [1, 2, 3, 4],\n      array2: [10, 11, 12],\n      array3: ['word1', 'word12', 'word13']\n    };\n  }\n\n  fillArray() {\n    this.setState({\n      array: [5, 6, 7, 8]\n    });\n    this.state.array2.forEach(function (i) {\n      i += i;\n      console.log(i); //doubles i\n    });\n    let found = this.state.array.find(item => item > 0);\n    console.log(`this is ${found}`); //grabs the first elements that fits the condition\n\n    let result = this.state.array3.filter(word => word.length > 4);\n    console.log(result);\n    let result2 = this.state.array.filter(num => num > 0);\n    console.log(`this is result2 ${result2}`); //filtering returned the multiple numbers greater than 0\n    //working with reduce\n\n    const reducer = (accumulator, currentValue) => accumulator += currentValue;\n\n    let reduce1 = this.state.array.reduce(reducer);\n    console.log(`this is reduce1 ${reduce1}`); //this summed up all the numbers in the array\n\n    let reduce2 = this.state.array.reduce;\n  }\n\n  componentDidMount() {\n    this.fillArray();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }\n    }, this.state.array.map(item => /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 21\n      }\n    }, item)), console.log(this.state.array));\n  }\n\n}\n\nexport default Map4;","map":{"version":3,"sources":["/Users/cierranease/reactRefresh/src/Map4/index.js"],"names":["React","Map4","Component","constructor","state","array","array2","array3","fillArray","setState","forEach","i","console","log","found","find","item","result","filter","word","length","result2","num","reducer","accumulator","currentValue","reduce1","reduce","reduce2","componentDidMount","render","map"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;;AACA,MAAMC,IAAN,SAAmBD,KAAK,CAACE,SAAzB,CAAmC;AAC/BC,EAAAA,WAAW,GAAG;AACV;AACA,SAAKC,KAAL,GAAY;AACRC,MAAAA,KAAK,EAAG,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,EAAO,CAAP,CADA;AAERC,MAAAA,MAAM,EAAE,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,CAFA;AAGRC,MAAAA,MAAM,EAAE,CAAC,OAAD,EAAU,QAAV,EAAoB,QAApB;AAHA,KAAZ;AAKH;;AACDC,EAAAA,SAAS,GAAG;AACR,SAAKC,QAAL,CAAc;AAACJ,MAAAA,KAAK,EAAG,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,EAAO,CAAP;AAAT,KAAd;AACA,SAAKD,KAAL,CAAWE,MAAX,CAAkBI,OAAlB,CAA0B,UAASC,CAAT,EAAY;AAClCA,MAAAA,CAAC,IAAIA,CAAL;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ,EAFkC,CAGlC;AACH,KAJD;AAKA,QAAIG,KAAK,GAAG,KAAKV,KAAL,CAAWC,KAAX,CAAiBU,IAAjB,CAAsBC,IAAI,IAAIA,IAAI,GAAG,CAArC,CAAZ;AACAJ,IAAAA,OAAO,CAACC,GAAR,CAAa,WAAUC,KAAM,EAA7B,EARQ,CASR;;AACA,QAAIG,MAAM,GAAG,KAAKb,KAAL,CAAWG,MAAX,CAAkBW,MAAlB,CAAyBC,IAAI,IAAIA,IAAI,CAACC,MAAL,GAAc,CAA/C,CAAb;AACAR,IAAAA,OAAO,CAACC,GAAR,CAAYI,MAAZ;AACA,QAAII,OAAO,GAAG,KAAKjB,KAAL,CAAWC,KAAX,CAAiBa,MAAjB,CAAwBI,GAAG,IAAIA,GAAG,GAAG,CAArC,CAAd;AACAV,IAAAA,OAAO,CAACC,GAAR,CAAa,mBAAkBQ,OAAQ,EAAvC,EAbQ,CAcR;AAEA;;AACA,UAAME,OAAO,GAAG,CAACC,WAAD,EAAcC,YAAd,KAA+BD,WAAW,IAAIC,YAA9D;;AACA,QAAIC,OAAO,GAAG,KAAKtB,KAAL,CAAWC,KAAX,CAAiBsB,MAAjB,CAAwBJ,OAAxB,CAAd;AACAX,IAAAA,OAAO,CAACC,GAAR,CAAa,mBAAkBa,OAAQ,EAAvC,EAnBQ,CAoBR;;AACA,QAAIE,OAAO,GAAG,KAAKxB,KAAL,CAAWC,KAAX,CAAiBsB,MAA/B;AAEH;;AACDE,EAAAA,iBAAiB,GAAG;AAChB,SAAKrB,SAAL;AACH;;AAEDsB,EAAAA,MAAM,GAAG;AAGL,wBACI,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAK1B,KAAL,CAAWC,KAAX,CAAiB0B,GAAjB,CAAqBf,IAAI,iBACtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKA,IAAL,CADH,CADL,EAIKJ,OAAO,CAACC,GAAR,CAAY,KAAKT,KAAL,CAAWC,KAAvB,CAJL,CADJ;AAQH;;AAhD8B;;AAmDnC,eAAeJ,IAAf","sourcesContent":["import React from 'react'\n\n//create functional component \n// function Map4() {\n//     return(\n//         <React.Fragment>\n//             <p>hi</p>\n//         </React.Fragment>\n//     )\n// }\n\n\n//now change functional component to class component\nclass Map4 extends React.Component {\n    constructor() {\n        super()\n        this.state ={\n            array : [1,2,3,4],\n            array2: [10, 11, 12],\n            array3: ['word1', 'word12', 'word13']\n        }\n    }\n    fillArray() {\n        this.setState({array : [5,6,7,8]})\n        this.state.array2.forEach(function(i) {\n            i += i;\n            console.log(i)\n            //doubles i\n        })\n        let found = this.state.array.find(item => item > 0)\n        console.log(`this is ${found}`)\n        //grabs the first elements that fits the condition\n        let result = this.state.array3.filter(word => word.length > 4)\n        console.log(result)\n        let result2 = this.state.array.filter(num => num > 0)\n        console.log(`this is result2 ${result2}`)\n        //filtering returned the multiple numbers greater than 0\n\n        //working with reduce\n        const reducer = (accumulator, currentValue) => accumulator += currentValue\n        let reduce1 = this.state.array.reduce(reducer)\n        console.log(`this is reduce1 ${reduce1}`)\n        //this summed up all the numbers in the array\n        let reduce2 = this.state.array.reduce\n\n    }\n    componentDidMount() {\n        this.fillArray()\n    }\n    \n    render() {\n      \n        \n        return(\n            <React.Fragment>\n                {this.state.array.map(item => (\n                    <li>{item}</li>\n                ))}\n                {console.log(this.state.array)}\n            </React.Fragment>\n        )\n    }\n}\n\nexport default Map4"]},"metadata":{},"sourceType":"module"}