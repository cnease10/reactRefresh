{"ast":null,"code":"var _jsxFileName = \"/Users/cierranease/reactRefresh/src/Map/index.js\";\n//import { render } from '@testing-library/react';\n//import { render } from '@testing-library/react';\nimport React from 'react';\n\nclass Map extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      grocery: [\"milk\", \"water\", \"food\"],\n      funStuff: [[\"code\", \"code\", \"code\"], [\"friends\", \"family\", \"brett\"], [\"reading\", \"puzzles\", \"outside\"]]\n    };\n  }\n\n  render() {\n    let funStuffItems = [this.state.funStuffItems];\n    let commas = funStuffItems.join(', '); //let splitItems = funStuffItems\n    // const [grocery, setstate] = useState([\"Milk\", \"bread\", \"water\"]);\n\n    for (let i = 0; i < this.state.funStuff.length; i++) {\n      console.log(funStuffItems); //funStuffItems = [this.state.funStuffItems]\n      //console.log(funStuffItems) == undefined\n      //but mapping over funStuffItems ==\n      //codecodecode\n      //friendsfamilybrett\n      //readingpuzzlesoutside\n      // for (let i= 0; i < this.state.funStuff.length; i++) {\n      // funStuffItems = this.state.funStuff[i]\n      // return funStuffItems\n      // let funStuffInner = this.state.funStuff[i]\n      // console.log(funStuffInner)\n      // for (let x =0; x < funStuffInner.length; x++) {\n      //     console.log(funStuffInner[x])\n      //     funStuffItems = funStuffInner[x]\n      //     return funStuffItems\n      // //only looping through first array of items so getting code  \n    } // this.setState(state => ({\n    //     funStuff: funStuffItems\n    // }))\n    // this.setState(state => ({\n    //     funStuff: funStuffItems\n    // }))\n\n\n    this.setState(state => ({\n      funStuff: commas\n    }));\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }\n    }, this.state.funStuff.map((fun, index) => /*#__PURE__*/React.createElement(\"li\", {\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 24\n      }\n    }, fun))));\n  }\n\n}\n\nexport default Map;","map":{"version":3,"sources":["/Users/cierranease/reactRefresh/src/Map/index.js"],"names":["React","Map","Component","constructor","state","grocery","funStuff","render","funStuffItems","commas","join","i","length","console","log","setState","map","fun","index"],"mappings":";AAAA;AACA;AACA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,GAAN,SAAkBD,KAAK,CAACE,SAAxB,CAAkC;AAC9BC,EAAAA,WAAW,GAAG;AACV;AACA,SAAKC,KAAL,GAAa;AACZC,MAAAA,OAAO,EAAG,CAAC,MAAD,EAAS,OAAT,EAAkB,MAAlB,CADE;AAEZC,MAAAA,QAAQ,EAAE,CAAC,CAAC,MAAD,EAAS,MAAT,EAAiB,MAAjB,CAAD,EAA2B,CAAC,SAAD,EAAY,QAAZ,EAAsB,OAAtB,CAA3B,EAA2D,CAAC,SAAD,EAAY,SAAZ,EAAuB,SAAvB,CAA3D;AAFE,KAAb;AAIH;;AAEDC,EAAAA,MAAM,GAAG;AACL,QAAIC,aAAa,GAAG,CAAC,KAAKJ,KAAL,CAAWI,aAAZ,CAApB;AACA,QAAIC,MAAM,GAAGD,aAAa,CAACE,IAAd,CAAmB,IAAnB,CAAb,CAFK,CAGL;AACA;;AACA,SAAK,IAAIC,CAAC,GAAE,CAAZ,EAAeA,CAAC,GAAG,KAAKP,KAAL,CAAWE,QAAX,CAAoBM,MAAvC,EAA+CD,CAAC,EAAhD,EAAoD;AAChDE,MAAAA,OAAO,CAACC,GAAR,CAAYN,aAAZ,EADgD,CAEhD;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEH,KAzBI,CA0BL;AACA;AACA;AACA;AACA;AACA;;;AACA,SAAKO,QAAL,CAAcX,KAAK,KAAK;AACpBE,MAAAA,QAAQ,EAAEG;AADU,KAAL,CAAnB;AAGA,wBACI,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,KAAKL,KAAL,CAAWE,QAAX,CAAoBU,GAApB,CAAwB,CAACC,GAAD,EAAMC,KAAN,kBACrB;AAAI,MAAA,GAAG,EAAEA,KAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAiBD,GAAjB,CADH,CADJ,CANJ,CADJ;AAeH;;AA3D6B;;AAiElC,eAAehB,GAAf","sourcesContent":["//import { render } from '@testing-library/react';\n//import { render } from '@testing-library/react';\nimport React from 'react';\n\nclass Map extends React.Component {\n    constructor() {\n        super();\n        this.state = {\n         grocery : [\"milk\", \"water\", \"food\"],\n         funStuff: [[\"code\", \"code\", \"code\"], [\"friends\", \"family\", \"brett\"], [\"reading\", \"puzzles\", \"outside\"]]\n        }\n    }\n    \n    render() {\n        let funStuffItems = [this.state.funStuffItems]\n        let commas = funStuffItems.join(', ')\n        //let splitItems = funStuffItems\n        // const [grocery, setstate] = useState([\"Milk\", \"bread\", \"water\"]);\n        for (let i= 0; i < this.state.funStuff.length; i++) {\n            console.log(funStuffItems)\n            //funStuffItems = [this.state.funStuffItems]\n            //console.log(funStuffItems) == undefined\n            //but mapping over funStuffItems ==\n            //codecodecode\n            //friendsfamilybrett\n            //readingpuzzlesoutside\n            \n            // for (let i= 0; i < this.state.funStuff.length; i++) {\n            // funStuffItems = this.state.funStuff[i]\n            // return funStuffItems\n            // let funStuffInner = this.state.funStuff[i]\n            // console.log(funStuffInner)\n            // for (let x =0; x < funStuffInner.length; x++) {\n            //     console.log(funStuffInner[x])\n            //     funStuffItems = funStuffInner[x]\n            //     return funStuffItems\n            // //only looping through first array of items so getting code  \n            \n        }\n        // this.setState(state => ({\n        //     funStuff: funStuffItems\n        // }))\n        // this.setState(state => ({\n        //     funStuff: funStuffItems\n        // }))\n        this.setState(state => ({\n            funStuff: commas\n        }))\n        return (\n            <React.Fragment>\n                {/* <ul>\n                    {this.state.grocery.map(item => (\n                        <li key={item}>{item}</li>\n                    ) )}\n                </ul> */}\n                <ul>\n                   {this.state.funStuff.map((fun, index) => (\n                       <li key={index}>{fun}</li>\n                   ))}\n                </ul>\n            </React.Fragment>\n        )\n          \n    }\n      \n        \n    \n}\n\nexport default Map"]},"metadata":{},"sourceType":"module"}