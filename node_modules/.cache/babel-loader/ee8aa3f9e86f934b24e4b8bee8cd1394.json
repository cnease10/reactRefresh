{"ast":null,"code":"var _jsxFileName = \"/Users/cierranease/reactRefresh/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css'; // class Square extends React.Component {\n//     //initialize state with a constructor\n//     // constructor(props) {\n//     //     super(props);\n//     //     //In JS classes, we need super when defining the constructor of a subclass\n//     //     //In React, all component classes should start with a super(props) call\n//     //     this.state = {\n//     //         value: null,\n//     //     };\n//     // }\n//     //DELETED constructor since Sqauare does not manage game state anymore\n//     //Square is now a controlled component\n//     render() {\n//       return (\n//           //show the value passed by renderSquare\n//           //adding on click - onClick={function() {alert('click');}} or\n//           //onClick={() => alert('click')}\n//           //need to pass the function or it will alert every time React re-renders\n//           //onClick={function() {alert('click');}} becomes onClick={() => this.setState({value: 'X'})}\n//         <button \n//            className=\"square\" \n//            onClick={() => this.props.onClick() }\n//         >\n//           {this.props.value}\n//         </button>\n//         //{this.props.value} is now {this.state.value}\n//         //lifting state - replacing {this.state.value} with {this.props.value}\n//         //replacing this.setState({value: 'X'}) with this.props.OnClick()\n//       );\n//     }\n//   }\n//Create function component for Square\n//does not have its own state\n\nfunction Square(props) {\n  return /*#__PURE__*/React.createElement(\"button\", {\n    className: \"square\",\n    onClick: props.onClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 11\n    }\n  }, props.value);\n}\n\nclass Board extends React.Component {\n  //initialize with constructor to add state \n  constructor(props) {\n    super(props);\n    this.state = {\n      squares: Array(9).fill(null),\n      xIsNext: true\n    };\n  }\n\n  handleClick(i) {\n    const squares = this.state.squares.slice();\n    squares[i] = this.state.xIsNext ? 'X' : 'O';\n    this.setState({\n      squares: squares,\n      xIsNext: !this.state.xIsNext\n    });\n  }\n\n  renderSquare(i) {\n    return /*#__PURE__*/React.createElement(Square, {\n      value: this.state.squares[i],\n      onClick: () => this.handleClick(i),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 7\n      }\n    }); //passing a prop called value to square with Square value={i} \n    //replacing Square value={i} with value={this.state.squares[i]}\n    //this.state.squares is reading from the array that we added to our state\n    //each square now receives a value prop\n    //lifting state -need to pass a function from board to square to have square call \n    //replaced  value={this.state.squares[i] with\n    //value = {this.state.squares[i]} and onClick={() => this.handleClick(i)}\n  }\n\n  render() {\n    const status = 'Next player: X';\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"status\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }\n    }, status), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"board-row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }\n    }, this.renderSquare(0), this.renderSquare(1), this.renderSquare(2)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"board-row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 11\n      }\n    }, this.renderSquare(3), this.renderSquare(4), this.renderSquare(5)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"board-row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 11\n      }\n    }, this.renderSquare(6), this.renderSquare(7), this.renderSquare(8)));\n  }\n\n}\n\nclass Game extends React.Component {\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"game\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"game-board\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Board, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"game-info\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"ol\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 13\n      }\n    })));\n  }\n\n} // ========================================\n\n\nReactDOM.render( /*#__PURE__*/React.createElement(Game, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 131,\n    columnNumber: 5\n  }\n}), document.getElementById('root'));","map":{"version":3,"sources":["/Users/cierranease/reactRefresh/src/index.js"],"names":["React","ReactDOM","Square","props","onClick","value","Board","Component","constructor","state","squares","Array","fill","xIsNext","handleClick","i","slice","setState","renderSquare","render","status","Game","document","getElementById"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\n// class Square extends React.Component {\n//     //initialize state with a constructor\n//     // constructor(props) {\n//     //     super(props);\n//     //     //In JS classes, we need super when defining the constructor of a subclass\n//     //     //In React, all component classes should start with a super(props) call\n//     //     this.state = {\n//     //         value: null,\n//     //     };\n//     // }\n\n//     //DELETED constructor since Sqauare does not manage game state anymore\n//     //Square is now a controlled component\n\n//     render() {\n//       return (\n//           //show the value passed by renderSquare\n//           //adding on click - onClick={function() {alert('click');}} or\n//           //onClick={() => alert('click')}\n//           //need to pass the function or it will alert every time React re-renders\n//           //onClick={function() {alert('click');}} becomes onClick={() => this.setState({value: 'X'})}\n//         <button \n//            className=\"square\" \n//            onClick={() => this.props.onClick() }\n//         >\n//           {this.props.value}\n//         </button>\n//         //{this.props.value} is now {this.state.value}\n\n//         //lifting state - replacing {this.state.value} with {this.props.value}\n//         //replacing this.setState({value: 'X'}) with this.props.OnClick()\n//       );\n//     }\n//   }\n\n\n//Create function component for Square\n//does not have its own state\n  function Square(props) {\n      return (\n          <button className=\"square\" onClick={props.onClick} >\n              {props.value}\n          </button>\n      );\n  }\n  \n  class Board extends React.Component {\n      //initialize with constructor to add state \n      constructor(props) {\n          super(props);\n          this.state = {\n              squares : Array(9).fill(null),\n              xIsNext: true,\n          }\n      }\n      handleClick(i) {\n          const squares = this.state.squares.slice();\n          squares[i] = this.state.xIsNext ? 'X' : 'O';\n          this.setState({\n              squares: squares,\n              xIsNext: !this.state.xIsNext,\n            });\n      }\n    renderSquare(i) {\n      return (\n      <Square \n        value = {this.state.squares[i]} \n        onClick={() => this.handleClick(i)}\n      />\n      );\n      //passing a prop called value to square with Square value={i} \n      //replacing Square value={i} with value={this.state.squares[i]}\n      //this.state.squares is reading from the array that we added to our state\n      //each square now receives a value prop\n\n      //lifting state -need to pass a function from board to square to have square call \n      //replaced  value={this.state.squares[i] with\n      //value = {this.state.squares[i]} and onClick={() => this.handleClick(i)}\n\n    }\n  \n    render() {\n      const status = 'Next player: X';\n  \n      return (\n        <div>\n          <div className=\"status\">{status}</div>\n          <div className=\"board-row\">\n            {this.renderSquare(0)}\n            {this.renderSquare(1)}\n            {this.renderSquare(2)}\n          </div>\n          <div className=\"board-row\">\n            {this.renderSquare(3)}\n            {this.renderSquare(4)}\n            {this.renderSquare(5)}\n          </div>\n          <div className=\"board-row\">\n            {this.renderSquare(6)}\n            {this.renderSquare(7)}\n            {this.renderSquare(8)}\n          </div>\n        </div>\n      );\n    }\n  }\n  \n  class Game extends React.Component {\n    render() {\n      return (\n        <div className=\"game\">\n          <div className=\"game-board\">\n            <Board />\n          </div>\n          <div className=\"game-info\">\n            <div>{/* status */}</div>\n            <ol>{/* TODO */}</ol>\n          </div>\n        </div>\n      );\n    }\n  }\n  \n  // ========================================\n  \n  ReactDOM.render(\n    <Game />,\n    document.getElementById('root')\n  );\n  "]},"metadata":{},"sourceType":"module"}